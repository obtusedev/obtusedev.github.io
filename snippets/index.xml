<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Snippets on obtusedev</title><link>https://obtuse.dev/snippets/</link><description>Recent content in Snippets on obtusedev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 02 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://obtuse.dev/snippets/index.xml" rel="self" type="application/rss+xml"/><item><title>Fetch API</title><link>https://obtuse.dev/snippets/fetch/</link><pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate><guid>https://obtuse.dev/snippets/fetch/</guid><description>fetch api is used for fetching resources like api calls.
It was brower only but is now coming to node.
fetch returns a Response object which then needs to be turned into JSON.
console.log(fetch(&amp;#34;http://httpbin.org/get&amp;#34;)); // Promise fetch(&amp;#34;http://httpbin.org/get&amp;#34;).then(res =&amp;gt; console.log(res)); // Response object fetch(&amp;#34;http://httpbin.org/get&amp;#34;).then(res =&amp;gt; res.json()); // returns aother Promise fetch(&amp;#34;http://httpbin.org/get&amp;#34;) .then(res =&amp;gt; res.json()) .then(data =&amp;gt; console.log(data)); // logs data fetch doesn&amp;rsquo;t stop even if it gets a 404 by default. Use res.</description></item><item><title>Vue 3</title><link>https://obtuse.dev/snippets/vue3/</link><pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate><guid>https://obtuse.dev/snippets/vue3/</guid><description>Preventing template from rendering:
&amp;lt;style&amp;gt; [v-cloak] { display: none; /* Prevents {{}} from rendering until fully loaded */ } &amp;lt;/style&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34; v-cloak&amp;gt;&amp;lt;/div&amp;gt;</description></item><item><title>ExpressJS</title><link>https://obtuse.dev/snippets/expressjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://obtuse.dev/snippets/expressjs/</guid><description>App setup:
import express from &amp;#34;express&amp;#34;; const app = express(); const port = 3000; app.get(&amp;#34;/&amp;#34;, (req, res) =&amp;gt; { res.send(&amp;#34;hi&amp;#34;); }); app.listen(port, () =&amp;gt; { console.log(`app running on localhost:${port}`); }); Basic route:
app.get(&amp;#34;/&amp;#34;, (req, res) =&amp;gt; { res.send(&amp;#34;hi&amp;#34;); });</description></item></channel></rss>